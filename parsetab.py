
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARR ARRAY BOOL CHAR COMA CORCHDER CORCHIZQ CTEB CTEC CTEF CTEI CTESTRING DIFF DIV DOSPUN ELSE FLOAT ID IF IGUAL INT LLAVDER LLAVIZQ MAS MAYOR MENOR MENOS MOD OR PARDER PARIZQ POR PRINT PROGRAM PUNCOM VAR VOID WHILEprogram : PROGRAM ID PUNCOM vars bloque  vars : VAR id DOSPUN TIPO  PUNCOM asignacion_idid : ID acum_idacum_id : COMA ID acum_id\n                | emptyasignacion_id : id DOSPUN TIPO PUNCOM asignacion_id\n                  | emptyTIPO : INT\n            | FLOAT\n            | BOOL\n            | CHARbloque : LLAVIZQ multiples_estatutos LLAVDERestatuto : asignacion\n                 | condicion_if\n                 | condicion_while\n                 | escrituramultiples_estatutos : estatuto multiples_estatutos\n                       | emptyINCREMENTO : ID MAS MAS PUNCOMDECREMENTO : ID MENOS MENOS PUNCOMasignacion : ID IGUAL expresion PUNCOMexpresion : expresion AND expresionexpresion : expresion OR expresionescritura : PRINT PARIZQ print_expresion PARDER PUNCOMprint_expresion : expresion multiples_print\n                       | CTESTRING multiples_printmultiples_print : COMA  print_expresion\n                 | emptycondicion_if : IF PARIZQ expresion PARDER bloque PUNCOM\n                 | IF PARIZQ expresion PARDER bloque else_condicion PUNCOMelse_condicion : ELSE bloquecondicion_while : WHILE PARIZQ expresion PARDER bloque PUNCOMfuncion : VOID ID PARIZQ vars_func PARDER vars bloque PUNCOM\n               | INT ID PARIZQ vars_func PARDER vars bloque PUNCOM\n               | FLOAT ID PARIZQ vars_func PARDER vars bloque PUNCOM\n               | BOOL ID PARIZQ vars_func PARDER vars bloque PUNCOM\n               | CHAR ID PARIZQ vars_func PARDER vars bloque PUNCOMvars_func : TIPO ID COMA vars_func\n                 | TIPO ID\n                 | emptyexpresion : exp \n                 | exp MAYOR exp\n                 | exp MENOR exp\n                 | exp DIFF exp\n                 | exp mas_igual exp\n                 | exp menor_igual exp\n                 | exp igual_igual exp\n                 | exp diff_igual expmas_igual : MAYOR IGUALmenor_igual : MENOR IGUALigual_igual : IGUAL IGUALdiff_igual : DIFF IGUALexp : termino exp_operacionexp_operacion : MAS termino exp_operacion\n                     | MENOS termino exp_operacion\n                     | emptytermino : factor termino_operadortermino_operador : POR factor termino_operador\n                        | DIV factor termino_operador\n                        | MOD factor termino_operador\n                        | emptyfactor : PARIZQ expresion PARDER\n              | MAS var_cte\n              | MENOS var_cte\n              | var_cte\n              | emptyvar_cte : ID\n               | CTEI\n               | CTEF\n               | CTEB\n               | CTECempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,7,26,],[0,-1,-12,]),'ID':([2,6,8,12,14,15,16,17,24,28,29,30,31,43,44,46,57,59,60,61,62,63,64,65,66,67,68,71,72,75,76,77,86,95,97,99,104,113,121,124,126,128,],[3,10,18,18,-13,-14,-15,-16,37,38,38,38,38,38,38,38,10,-21,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-49,-50,-52,-51,-24,-29,-32,-30,10,]),'PUNCOM':([3,26,28,32,33,34,35,36,38,39,40,41,42,45,47,48,49,50,51,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,80,81,84,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,117,118,119,120,122,125,127,],[4,-12,-72,57,-8,-9,-10,-11,-67,59,-41,-72,-72,-65,-66,-68,-69,-70,-71,-72,-72,-72,-72,-72,-72,-72,-72,-72,-53,-72,-72,-56,-57,-72,-72,-72,-61,-63,-64,113,-22,-23,-42,-49,-43,-50,-44,-52,-45,-46,-47,-48,-51,-72,-72,-72,-72,-72,-62,121,124,-54,-55,-58,-59,-60,126,128,-31,]),'VAR':([4,],[6,]),'LLAVIZQ':([5,57,82,83,90,91,123,128,129,],[8,-72,8,8,-2,-7,8,-72,-6,]),'LLAVDER':([8,11,12,13,14,15,16,17,27,59,113,121,124,126,],[-72,26,-72,-18,-13,-14,-15,-16,-17,-21,-24,-29,-32,-30,]),'IF':([8,12,14,15,16,17,59,113,121,124,126,],[19,19,-13,-14,-15,-16,-21,-24,-29,-32,-30,]),'WHILE':([8,12,14,15,16,17,59,113,121,124,126,],[20,20,-13,-14,-15,-16,-21,-24,-29,-32,-30,]),'PRINT':([8,12,14,15,16,17,59,113,121,124,126,],[21,21,-13,-14,-15,-16,-21,-24,-29,-32,-30,]),'DOSPUN':([9,10,23,25,37,58,89,],[22,-72,-3,-5,-72,-4,115,]),'COMA':([10,31,37,38,40,41,42,45,47,48,49,50,51,55,56,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,80,81,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,119,120,],[24,-72,24,-67,-41,-72,-72,-65,-66,-68,-69,-70,-71,86,86,-72,-72,-72,-72,-72,-72,-72,-72,-72,-53,-72,-72,-56,-57,-72,-72,-72,-61,-63,-64,-72,-22,-23,-42,-49,-43,-50,-44,-52,-45,-46,-47,-48,-51,-72,-72,-72,-72,-72,-62,-54,-55,-58,-59,-60,]),'IGUAL':([18,28,29,30,31,38,40,41,42,43,45,47,48,49,50,51,60,61,62,63,64,69,70,71,72,73,74,75,76,77,78,80,81,86,105,106,107,108,109,110,116,117,118,119,120,],[28,-72,-72,-72,-72,-67,69,-72,-72,-72,-65,-66,-68,-69,-70,-71,-72,-72,95,97,99,104,-53,-72,-72,-56,-57,-72,-72,-72,-61,-63,-64,-72,-72,-72,-72,-72,-72,-62,-54,-55,-58,-59,-60,]),'PARIZQ':([19,20,21,28,29,30,31,43,60,61,62,63,64,65,66,67,68,71,72,75,76,77,86,95,97,99,104,],[29,30,31,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-49,-50,-52,-51,]),'INT':([22,115,],[33,33,]),'FLOAT':([22,115,],[34,34,]),'BOOL':([22,115,],[35,35,]),'CHAR':([22,115,],[36,36,]),'ELSE':([26,111,],[-12,123,]),'MAS':([28,29,30,31,38,41,42,43,45,47,48,49,50,51,60,61,62,63,64,65,66,67,68,71,72,74,75,76,77,78,80,81,86,95,97,99,104,105,106,107,108,109,110,118,119,120,],[44,44,44,44,-67,71,-72,44,-65,-66,-68,-69,-70,-71,44,44,44,44,44,44,44,44,44,44,44,-57,44,44,44,-61,-63,-64,44,-49,-50,-52,-51,71,71,-72,-72,-72,-62,-58,-59,-60,]),'MENOS':([28,29,30,31,38,41,42,43,45,47,48,49,50,51,60,61,62,63,64,65,66,67,68,71,72,74,75,76,77,78,80,81,86,95,97,99,104,105,106,107,108,109,110,118,119,120,],[46,46,46,46,-67,72,-72,46,-65,-66,-68,-69,-70,-71,46,46,46,46,46,46,46,46,46,46,46,-57,46,46,46,-61,-63,-64,46,-49,-50,-52,-51,72,72,-72,-72,-72,-62,-58,-59,-60,]),'CTEI':([28,29,30,31,43,44,46,60,61,62,63,64,65,66,67,68,71,72,75,76,77,86,95,97,99,104,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-49,-50,-52,-51,]),'CTEF':([28,29,30,31,43,44,46,60,61,62,63,64,65,66,67,68,71,72,75,76,77,86,95,97,99,104,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-49,-50,-52,-51,]),'CTEB':([28,29,30,31,43,44,46,60,61,62,63,64,65,66,67,68,71,72,75,76,77,86,95,97,99,104,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-49,-50,-52,-51,]),'CTEC':([28,29,30,31,43,44,46,60,61,62,63,64,65,66,67,68,71,72,75,76,77,86,95,97,99,104,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-49,-50,-52,-51,]),'POR':([28,29,30,31,38,42,43,45,47,48,49,50,51,60,61,62,63,64,65,66,67,68,71,72,75,76,77,80,81,86,95,97,99,104,107,108,109,110,],[-72,-72,-72,-72,-67,75,-72,-65,-66,-68,-69,-70,-71,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-63,-64,-72,-49,-50,-52,-51,75,75,75,-62,]),'DIV':([28,29,30,31,38,42,43,45,47,48,49,50,51,60,61,62,63,64,65,66,67,68,71,72,75,76,77,80,81,86,95,97,99,104,107,108,109,110,],[-72,-72,-72,-72,-67,76,-72,-65,-66,-68,-69,-70,-71,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-63,-64,-72,-49,-50,-52,-51,76,76,76,-62,]),'MOD':([28,29,30,31,38,42,43,45,47,48,49,50,51,60,61,62,63,64,65,66,67,68,71,72,75,76,77,80,81,86,95,97,99,104,107,108,109,110,],[-72,-72,-72,-72,-67,77,-72,-65,-66,-68,-69,-70,-71,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-63,-64,-72,-49,-50,-52,-51,77,77,77,-62,]),'MAYOR':([28,29,30,31,38,40,41,42,43,45,47,48,49,50,51,60,61,70,71,72,73,74,75,76,77,78,80,81,86,105,106,107,108,109,110,116,117,118,119,120,],[-72,-72,-72,-72,-67,62,-72,-72,-72,-65,-66,-68,-69,-70,-71,-72,-72,-53,-72,-72,-56,-57,-72,-72,-72,-61,-63,-64,-72,-72,-72,-72,-72,-72,-62,-54,-55,-58,-59,-60,]),'MENOR':([28,29,30,31,38,40,41,42,43,45,47,48,49,50,51,60,61,70,71,72,73,74,75,76,77,78,80,81,86,105,106,107,108,109,110,116,117,118,119,120,],[-72,-72,-72,-72,-67,63,-72,-72,-72,-65,-66,-68,-69,-70,-71,-72,-72,-53,-72,-72,-56,-57,-72,-72,-72,-61,-63,-64,-72,-72,-72,-72,-72,-72,-62,-54,-55,-58,-59,-60,]),'DIFF':([28,29,30,31,38,40,41,42,43,45,47,48,49,50,51,60,61,70,71,72,73,74,75,76,77,78,80,81,86,105,106,107,108,109,110,116,117,118,119,120,],[-72,-72,-72,-72,-67,64,-72,-72,-72,-65,-66,-68,-69,-70,-71,-72,-72,-53,-72,-72,-56,-57,-72,-72,-72,-61,-63,-64,-72,-72,-72,-72,-72,-72,-62,-54,-55,-58,-59,-60,]),'AND':([28,29,30,31,38,39,40,41,42,43,45,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,119,120,],[-72,-72,-72,-72,-67,60,-41,-72,-72,-72,-65,-66,-68,-69,-70,-71,60,60,60,-72,-72,-72,-72,-72,-72,-72,-72,-72,-53,-72,-72,-56,-57,-72,-72,-72,-61,60,-63,-64,-72,60,60,-42,-49,-43,-50,-44,-52,-45,-46,-47,-48,-51,-72,-72,-72,-72,-72,-62,-54,-55,-58,-59,-60,]),'OR':([28,29,30,31,38,39,40,41,42,43,45,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,119,120,],[-72,-72,-72,-72,-67,61,-41,-72,-72,-72,-65,-66,-68,-69,-70,-71,61,61,61,-72,-72,-72,-72,-72,-72,-72,-72,-72,-53,-72,-72,-56,-57,-72,-72,-72,-61,61,-63,-64,-72,61,61,-42,-49,-43,-50,-44,-52,-45,-46,-47,-48,-51,-72,-72,-72,-72,-72,-62,-54,-55,-58,-59,-60,]),'PARDER':([29,30,31,38,40,41,42,43,45,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,116,117,118,119,120,],[-72,-72,-72,-67,-41,-72,-72,-72,-65,-66,-68,-69,-70,-71,82,83,84,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-53,-72,-72,-56,-57,-72,-72,-72,-61,110,-63,-64,-25,-72,-28,-26,-22,-23,-42,-49,-43,-50,-44,-52,-45,-46,-47,-48,-51,-72,-72,-72,-72,-72,-62,-27,-54,-55,-58,-59,-60,]),'CTESTRING':([31,86,],[56,56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,],[5,]),'bloque':([5,82,83,123,],[7,111,112,127,]),'id':([6,57,128,],[9,89,89,]),'multiples_estatutos':([8,12,],[11,27,]),'estatuto':([8,12,],[12,12,]),'empty':([8,10,12,28,29,30,31,37,41,42,43,55,56,57,60,61,62,63,64,65,66,67,68,71,72,75,76,77,86,105,106,107,108,109,128,],[13,25,13,47,47,47,47,25,73,78,47,87,87,91,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,73,73,78,78,78,91,]),'asignacion':([8,12,],[14,14,]),'condicion_if':([8,12,],[15,15,]),'condicion_while':([8,12,],[16,16,]),'escritura':([8,12,],[17,17,]),'acum_id':([10,37,],[23,58,]),'TIPO':([22,115,],[32,125,]),'expresion':([28,29,30,31,43,60,61,86,],[39,52,53,55,79,92,93,55,]),'exp':([28,29,30,31,43,60,61,62,63,64,65,66,67,68,86,],[40,40,40,40,40,40,40,94,96,98,100,101,102,103,40,]),'termino':([28,29,30,31,43,60,61,62,63,64,65,66,67,68,71,72,86,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,105,106,41,]),'factor':([28,29,30,31,43,60,61,62,63,64,65,66,67,68,71,72,75,76,77,86,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,107,108,109,42,]),'var_cte':([28,29,30,31,43,44,46,60,61,62,63,64,65,66,67,68,71,72,75,76,77,86,],[45,45,45,45,45,80,81,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'print_expresion':([31,86,],[54,114,]),'mas_igual':([40,],[65,]),'menor_igual':([40,],[66,]),'igual_igual':([40,],[67,]),'diff_igual':([40,],[68,]),'exp_operacion':([41,105,106,],[70,116,117,]),'termino_operador':([42,107,108,109,],[74,118,119,120,]),'multiples_print':([55,56,],[85,88,]),'asignacion_id':([57,128,],[90,129,]),'else_condicion':([111,],[122,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID PUNCOM vars bloque','program',5,'p_program','parser_1.py',59),
  ('vars -> VAR id DOSPUN TIPO PUNCOM asignacion_id','vars',6,'p_vars','parser_1.py',65),
  ('id -> ID acum_id','id',2,'p_id','parser_1.py',70),
  ('acum_id -> COMA ID acum_id','acum_id',3,'p_acum_id','parser_1.py',74),
  ('acum_id -> empty','acum_id',1,'p_acum_id','parser_1.py',75),
  ('asignacion_id -> id DOSPUN TIPO PUNCOM asignacion_id','asignacion_id',5,'p_asignacion_id','parser_1.py',83),
  ('asignacion_id -> empty','asignacion_id',1,'p_asignacion_id','parser_1.py',84),
  ('TIPO -> INT','TIPO',1,'p_TIPO','parser_1.py',91),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO','parser_1.py',92),
  ('TIPO -> BOOL','TIPO',1,'p_TIPO','parser_1.py',93),
  ('TIPO -> CHAR','TIPO',1,'p_TIPO','parser_1.py',94),
  ('bloque -> LLAVIZQ multiples_estatutos LLAVDER','bloque',3,'p_bloque','parser_1.py',101),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser_1.py',108),
  ('estatuto -> condicion_if','estatuto',1,'p_estatuto','parser_1.py',109),
  ('estatuto -> condicion_while','estatuto',1,'p_estatuto','parser_1.py',110),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','parser_1.py',111),
  ('multiples_estatutos -> estatuto multiples_estatutos','multiples_estatutos',2,'p_multiples_estatutos','parser_1.py',115),
  ('multiples_estatutos -> empty','multiples_estatutos',1,'p_multiples_estatutos','parser_1.py',116),
  ('INCREMENTO -> ID MAS MAS PUNCOM','INCREMENTO',4,'p_INCREMENTO','parser_1.py',126),
  ('DECREMENTO -> ID MENOS MENOS PUNCOM','DECREMENTO',4,'p_DECREMENTO','parser_1.py',130),
  ('asignacion -> ID IGUAL expresion PUNCOM','asignacion',4,'p_asignacion','parser_1.py',134),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_and','parser_1.py',139),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_or','parser_1.py',143),
  ('escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM','escritura',5,'p_escritura','parser_1.py',147),
  ('print_expresion -> expresion multiples_print','print_expresion',2,'p_print_expresion','parser_1.py',151),
  ('print_expresion -> CTESTRING multiples_print','print_expresion',2,'p_print_expresion','parser_1.py',152),
  ('multiples_print -> COMA print_expresion','multiples_print',2,'p_multiples_print','parser_1.py',156),
  ('multiples_print -> empty','multiples_print',1,'p_multiples_print','parser_1.py',157),
  ('condicion_if -> IF PARIZQ expresion PARDER bloque PUNCOM','condicion_if',6,'p_condicion_if','parser_1.py',162),
  ('condicion_if -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM','condicion_if',7,'p_condicion_if','parser_1.py',163),
  ('else_condicion -> ELSE bloque','else_condicion',2,'p_else_condicion','parser_1.py',167),
  ('condicion_while -> WHILE PARIZQ expresion PARDER bloque PUNCOM','condicion_while',6,'p_condicion_while','parser_1.py',171),
  ('funcion -> VOID ID PARIZQ vars_func PARDER vars bloque PUNCOM','funcion',8,'p_funcion','parser_1.py',177),
  ('funcion -> INT ID PARIZQ vars_func PARDER vars bloque PUNCOM','funcion',8,'p_funcion','parser_1.py',178),
  ('funcion -> FLOAT ID PARIZQ vars_func PARDER vars bloque PUNCOM','funcion',8,'p_funcion','parser_1.py',179),
  ('funcion -> BOOL ID PARIZQ vars_func PARDER vars bloque PUNCOM','funcion',8,'p_funcion','parser_1.py',180),
  ('funcion -> CHAR ID PARIZQ vars_func PARDER vars bloque PUNCOM','funcion',8,'p_funcion','parser_1.py',181),
  ('vars_func -> TIPO ID COMA vars_func','vars_func',4,'p_vars_func','parser_1.py',184),
  ('vars_func -> TIPO ID','vars_func',2,'p_vars_func','parser_1.py',185),
  ('vars_func -> empty','vars_func',1,'p_vars_func','parser_1.py',186),
  ('expresion -> exp','expresion',1,'p_expresion','parser_1.py',190),
  ('expresion -> exp MAYOR exp','expresion',3,'p_expresion','parser_1.py',191),
  ('expresion -> exp MENOR exp','expresion',3,'p_expresion','parser_1.py',192),
  ('expresion -> exp DIFF exp','expresion',3,'p_expresion','parser_1.py',193),
  ('expresion -> exp mas_igual exp','expresion',3,'p_expresion','parser_1.py',194),
  ('expresion -> exp menor_igual exp','expresion',3,'p_expresion','parser_1.py',195),
  ('expresion -> exp igual_igual exp','expresion',3,'p_expresion','parser_1.py',196),
  ('expresion -> exp diff_igual exp','expresion',3,'p_expresion','parser_1.py',197),
  ('mas_igual -> MAYOR IGUAL','mas_igual',2,'p_mas_igual','parser_1.py',201),
  ('menor_igual -> MENOR IGUAL','menor_igual',2,'p_menor_igual','parser_1.py',204),
  ('igual_igual -> IGUAL IGUAL','igual_igual',2,'p_igual_igual','parser_1.py',207),
  ('diff_igual -> DIFF IGUAL','diff_igual',2,'p_diff_igual','parser_1.py',210),
  ('exp -> termino exp_operacion','exp',2,'p_exp','parser_1.py',215),
  ('exp_operacion -> MAS termino exp_operacion','exp_operacion',3,'p_exp_operacion','parser_1.py',218),
  ('exp_operacion -> MENOS termino exp_operacion','exp_operacion',3,'p_exp_operacion','parser_1.py',219),
  ('exp_operacion -> empty','exp_operacion',1,'p_exp_operacion','parser_1.py',220),
  ('termino -> factor termino_operador','termino',2,'p_termino','parser_1.py',226),
  ('termino_operador -> POR factor termino_operador','termino_operador',3,'p_termino_operador','parser_1.py',230),
  ('termino_operador -> DIV factor termino_operador','termino_operador',3,'p_termino_operador','parser_1.py',231),
  ('termino_operador -> MOD factor termino_operador','termino_operador',3,'p_termino_operador','parser_1.py',232),
  ('termino_operador -> empty','termino_operador',1,'p_termino_operador','parser_1.py',233),
  ('factor -> PARIZQ expresion PARDER','factor',3,'p_factor','parser_1.py',237),
  ('factor -> MAS var_cte','factor',2,'p_factor','parser_1.py',238),
  ('factor -> MENOS var_cte','factor',2,'p_factor','parser_1.py',239),
  ('factor -> var_cte','factor',1,'p_factor','parser_1.py',240),
  ('factor -> empty','factor',1,'p_factor','parser_1.py',241),
  ('var_cte -> ID','var_cte',1,'p_var_cte','parser_1.py',245),
  ('var_cte -> CTEI','var_cte',1,'p_var_cte','parser_1.py',246),
  ('var_cte -> CTEF','var_cte',1,'p_var_cte','parser_1.py',247),
  ('var_cte -> CTEB','var_cte',1,'p_var_cte','parser_1.py',248),
  ('var_cte -> CTEC','var_cte',1,'p_var_cte','parser_1.py',249),
  ('empty -> <empty>','empty',0,'p_empty','parser_1.py',252),
]
