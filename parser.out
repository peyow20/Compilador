Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARR
    ARRAY
    CORCHDER
    CORCHIZQ

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID PUNCOM vars bloque
Rule 2     vars -> VAR id DOSPUN TIPO PUNCOM asignacion_id
Rule 3     id -> ID acum_id
Rule 4     acum_id -> COMA ID acum_id
Rule 5     acum_id -> empty
Rule 6     asignacion_id -> id DOSPUN TIPO PUNCOM asignacion_id
Rule 7     asignacion_id -> empty
Rule 8     TIPO -> INT
Rule 9     TIPO -> FLOAT
Rule 10    TIPO -> BOOL
Rule 11    TIPO -> CHAR
Rule 12    bloque -> LLAVIZQ multiples_estatutos LLAVDER
Rule 13    estatuto -> asignacion
Rule 14    estatuto -> condicion_if
Rule 15    estatuto -> condicion_while
Rule 16    estatuto -> escritura
Rule 17    multiples_estatutos -> estatuto multiples_estatutos
Rule 18    multiples_estatutos -> empty
Rule 19    INCREMENTO -> ID MAS MAS PUNCOM
Rule 20    DECREMENTO -> ID MENOS MENOS PUNCOM
Rule 21    asignacion -> ID IGUAL expresion PUNCOM
Rule 22    expresion -> expresion AND expresion
Rule 23    expresion -> expresion OR expresion
Rule 24    escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM
Rule 25    print_expresion -> expresion multiples_print
Rule 26    print_expresion -> CTESTRING multiples_print
Rule 27    multiples_print -> COMA print_expresion
Rule 28    multiples_print -> empty
Rule 29    condicion_if -> IF PARIZQ expresion PARDER bloque PUNCOM
Rule 30    condicion_if -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM
Rule 31    else_condicion -> ELSE bloque
Rule 32    condicion_while -> WHILE PARIZQ expresion PARDER bloque PUNCOM
Rule 33    funcion -> VOID ID PARIZQ vars_func PARDER vars bloque PUNCOM
Rule 34    funcion -> INT ID PARIZQ vars_func PARDER vars bloque PUNCOM
Rule 35    funcion -> FLOAT ID PARIZQ vars_func PARDER vars bloque PUNCOM
Rule 36    funcion -> BOOL ID PARIZQ vars_func PARDER vars bloque PUNCOM
Rule 37    funcion -> CHAR ID PARIZQ vars_func PARDER vars bloque PUNCOM
Rule 38    vars_func -> TIPO ID COMA vars_func
Rule 39    vars_func -> TIPO ID
Rule 40    vars_func -> empty
Rule 41    expresion -> exp
Rule 42    expresion -> exp MAYOR exp
Rule 43    expresion -> exp MENOR exp
Rule 44    expresion -> exp DIFF exp
Rule 45    expresion -> exp mas_igual exp
Rule 46    expresion -> exp menor_igual exp
Rule 47    expresion -> exp igual_igual exp
Rule 48    expresion -> exp diff_igual exp
Rule 49    mas_igual -> MAYOR IGUAL
Rule 50    menor_igual -> MENOR IGUAL
Rule 51    igual_igual -> IGUAL IGUAL
Rule 52    diff_igual -> DIFF IGUAL
Rule 53    exp -> termino exp_operacion
Rule 54    exp_operacion -> MAS termino exp_operacion
Rule 55    exp_operacion -> MENOS termino exp_operacion
Rule 56    exp_operacion -> empty
Rule 57    termino -> factor termino_operador
Rule 58    termino_operador -> POR factor termino_operador
Rule 59    termino_operador -> DIV factor termino_operador
Rule 60    termino_operador -> MOD factor termino_operador
Rule 61    termino_operador -> empty
Rule 62    factor -> PARIZQ expresion PARDER
Rule 63    factor -> MAS var_cte
Rule 64    factor -> MENOS var_cte
Rule 65    factor -> var_cte
Rule 66    factor -> empty
Rule 67    var_cte -> ID
Rule 68    var_cte -> CTEI
Rule 69    var_cte -> CTEF
Rule 70    var_cte -> CTEB
Rule 71    var_cte -> CTEC
Rule 72    empty -> <empty>

Terminals, with rules where they appear

AND                  : 22
ARR                  : 
ARRAY                : 
BOOL                 : 10 36
CHAR                 : 11 37
COMA                 : 4 27 38
CORCHDER             : 
CORCHIZQ             : 
CTEB                 : 70
CTEC                 : 71
CTEF                 : 69
CTEI                 : 68
CTESTRING            : 26
DIFF                 : 44 52
DIV                  : 59
DOSPUN               : 2 6
ELSE                 : 31
FLOAT                : 9 35
ID                   : 1 3 4 19 20 21 33 34 35 36 37 38 39 67
IF                   : 29 30
IGUAL                : 21 49 50 51 51 52
INT                  : 8 34
LLAVDER              : 12
LLAVIZQ              : 12
MAS                  : 19 19 54 63
MAYOR                : 42 49
MENOR                : 43 50
MENOS                : 20 20 55 64
MOD                  : 60
OR                   : 23
PARDER               : 24 29 30 32 33 34 35 36 37 62
PARIZQ               : 24 29 30 32 33 34 35 36 37 62
POR                  : 58
PRINT                : 24
PROGRAM              : 1
PUNCOM               : 1 2 6 19 20 21 24 29 30 32 33 34 35 36 37
VAR                  : 2
VOID                 : 33
WHILE                : 32
error                : 

Nonterminals, with rules where they appear

DECREMENTO           : 
INCREMENTO           : 
TIPO                 : 2 6 38 39
acum_id              : 3 4
asignacion           : 13
asignacion_id        : 2 6
bloque               : 1 29 30 31 32 33 34 35 36 37
condicion_if         : 14
condicion_while      : 15
diff_igual           : 48
else_condicion       : 30
empty                : 5 7 18 28 40 56 61 66
escritura            : 16
estatuto             : 17
exp                  : 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48
exp_operacion        : 53 54 55
expresion            : 21 22 22 23 23 25 29 30 32 62
factor               : 57 58 59 60
funcion              : 
id                   : 2 6
igual_igual          : 47
mas_igual            : 45
menor_igual          : 46
multiples_estatutos  : 12 17
multiples_print      : 25 26
print_expresion      : 24 27
program              : 0
termino              : 53 54 55
termino_operador     : 57 58 59 60
var_cte              : 63 64 65
vars                 : 1 33 34 35 36 37
vars_func            : 33 34 35 36 37 38

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID PUNCOM vars bloque

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID PUNCOM vars bloque

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . PUNCOM vars bloque

    PUNCOM          shift and go to state 4


state 4

    (1) program -> PROGRAM ID PUNCOM . vars bloque
    (2) vars -> . VAR id DOSPUN TIPO PUNCOM asignacion_id

    VAR             shift and go to state 6

    vars                           shift and go to state 5

state 5

    (1) program -> PROGRAM ID PUNCOM vars . bloque
    (12) bloque -> . LLAVIZQ multiples_estatutos LLAVDER

    LLAVIZQ         shift and go to state 8

    bloque                         shift and go to state 7

state 6

    (2) vars -> VAR . id DOSPUN TIPO PUNCOM asignacion_id
    (3) id -> . ID acum_id

    ID              shift and go to state 10

    id                             shift and go to state 9

state 7

    (1) program -> PROGRAM ID PUNCOM vars bloque .

    $end            reduce using rule 1 (program -> PROGRAM ID PUNCOM vars bloque .)


state 8

    (12) bloque -> LLAVIZQ . multiples_estatutos LLAVDER
    (17) multiples_estatutos -> . estatuto multiples_estatutos
    (18) multiples_estatutos -> . empty
    (13) estatuto -> . asignacion
    (14) estatuto -> . condicion_if
    (15) estatuto -> . condicion_while
    (16) estatuto -> . escritura
    (72) empty -> .
    (21) asignacion -> . ID IGUAL expresion PUNCOM
    (29) condicion_if -> . IF PARIZQ expresion PARDER bloque PUNCOM
    (30) condicion_if -> . IF PARIZQ expresion PARDER bloque else_condicion PUNCOM
    (32) condicion_while -> . WHILE PARIZQ expresion PARDER bloque PUNCOM
    (24) escritura -> . PRINT PARIZQ print_expresion PARDER PUNCOM

    LLAVDER         reduce using rule 72 (empty -> .)
    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    PRINT           shift and go to state 21

    multiples_estatutos            shift and go to state 11
    estatuto                       shift and go to state 12
    empty                          shift and go to state 13
    asignacion                     shift and go to state 14
    condicion_if                   shift and go to state 15
    condicion_while                shift and go to state 16
    escritura                      shift and go to state 17

state 9

    (2) vars -> VAR id . DOSPUN TIPO PUNCOM asignacion_id

    DOSPUN          shift and go to state 22


state 10

    (3) id -> ID . acum_id
    (4) acum_id -> . COMA ID acum_id
    (5) acum_id -> . empty
    (72) empty -> .

    COMA            shift and go to state 24
    DOSPUN          reduce using rule 72 (empty -> .)

    acum_id                        shift and go to state 23
    empty                          shift and go to state 25

state 11

    (12) bloque -> LLAVIZQ multiples_estatutos . LLAVDER

    LLAVDER         shift and go to state 26


state 12

    (17) multiples_estatutos -> estatuto . multiples_estatutos
    (17) multiples_estatutos -> . estatuto multiples_estatutos
    (18) multiples_estatutos -> . empty
    (13) estatuto -> . asignacion
    (14) estatuto -> . condicion_if
    (15) estatuto -> . condicion_while
    (16) estatuto -> . escritura
    (72) empty -> .
    (21) asignacion -> . ID IGUAL expresion PUNCOM
    (29) condicion_if -> . IF PARIZQ expresion PARDER bloque PUNCOM
    (30) condicion_if -> . IF PARIZQ expresion PARDER bloque else_condicion PUNCOM
    (32) condicion_while -> . WHILE PARIZQ expresion PARDER bloque PUNCOM
    (24) escritura -> . PRINT PARIZQ print_expresion PARDER PUNCOM

    LLAVDER         reduce using rule 72 (empty -> .)
    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    PRINT           shift and go to state 21

    estatuto                       shift and go to state 12
    multiples_estatutos            shift and go to state 27
    empty                          shift and go to state 13
    asignacion                     shift and go to state 14
    condicion_if                   shift and go to state 15
    condicion_while                shift and go to state 16
    escritura                      shift and go to state 17

state 13

    (18) multiples_estatutos -> empty .

    LLAVDER         reduce using rule 18 (multiples_estatutos -> empty .)


state 14

    (13) estatuto -> asignacion .

    ID              reduce using rule 13 (estatuto -> asignacion .)
    IF              reduce using rule 13 (estatuto -> asignacion .)
    WHILE           reduce using rule 13 (estatuto -> asignacion .)
    PRINT           reduce using rule 13 (estatuto -> asignacion .)
    LLAVDER         reduce using rule 13 (estatuto -> asignacion .)


state 15

    (14) estatuto -> condicion_if .

    ID              reduce using rule 14 (estatuto -> condicion_if .)
    IF              reduce using rule 14 (estatuto -> condicion_if .)
    WHILE           reduce using rule 14 (estatuto -> condicion_if .)
    PRINT           reduce using rule 14 (estatuto -> condicion_if .)
    LLAVDER         reduce using rule 14 (estatuto -> condicion_if .)


state 16

    (15) estatuto -> condicion_while .

    ID              reduce using rule 15 (estatuto -> condicion_while .)
    IF              reduce using rule 15 (estatuto -> condicion_while .)
    WHILE           reduce using rule 15 (estatuto -> condicion_while .)
    PRINT           reduce using rule 15 (estatuto -> condicion_while .)
    LLAVDER         reduce using rule 15 (estatuto -> condicion_while .)


state 17

    (16) estatuto -> escritura .

    ID              reduce using rule 16 (estatuto -> escritura .)
    IF              reduce using rule 16 (estatuto -> escritura .)
    WHILE           reduce using rule 16 (estatuto -> escritura .)
    PRINT           reduce using rule 16 (estatuto -> escritura .)
    LLAVDER         reduce using rule 16 (estatuto -> escritura .)


state 18

    (21) asignacion -> ID . IGUAL expresion PUNCOM

    IGUAL           shift and go to state 28


state 19

    (29) condicion_if -> IF . PARIZQ expresion PARDER bloque PUNCOM
    (30) condicion_if -> IF . PARIZQ expresion PARDER bloque else_condicion PUNCOM

    PARIZQ          shift and go to state 29


state 20

    (32) condicion_while -> WHILE . PARIZQ expresion PARDER bloque PUNCOM

    PARIZQ          shift and go to state 30


state 21

    (24) escritura -> PRINT . PARIZQ print_expresion PARDER PUNCOM

    PARIZQ          shift and go to state 31


state 22

    (2) vars -> VAR id DOSPUN . TIPO PUNCOM asignacion_id
    (8) TIPO -> . INT
    (9) TIPO -> . FLOAT
    (10) TIPO -> . BOOL
    (11) TIPO -> . CHAR

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    BOOL            shift and go to state 35
    CHAR            shift and go to state 36

    TIPO                           shift and go to state 32

state 23

    (3) id -> ID acum_id .

    DOSPUN          reduce using rule 3 (id -> ID acum_id .)


state 24

    (4) acum_id -> COMA . ID acum_id

    ID              shift and go to state 37


state 25

    (5) acum_id -> empty .

    DOSPUN          reduce using rule 5 (acum_id -> empty .)


state 26

    (12) bloque -> LLAVIZQ multiples_estatutos LLAVDER .

    $end            reduce using rule 12 (bloque -> LLAVIZQ multiples_estatutos LLAVDER .)
    PUNCOM          reduce using rule 12 (bloque -> LLAVIZQ multiples_estatutos LLAVDER .)
    ELSE            reduce using rule 12 (bloque -> LLAVIZQ multiples_estatutos LLAVDER .)


state 27

    (17) multiples_estatutos -> estatuto multiples_estatutos .

    LLAVDER         reduce using rule 17 (multiples_estatutos -> estatuto multiples_estatutos .)


state 28

    (21) asignacion -> ID IGUAL . expresion PUNCOM
    (22) expresion -> . expresion AND expresion
    (23) expresion -> . expresion OR expresion
    (41) expresion -> . exp
    (42) expresion -> . exp MAYOR exp
    (43) expresion -> . exp MENOR exp
    (44) expresion -> . exp DIFF exp
    (45) expresion -> . exp mas_igual exp
    (46) expresion -> . exp menor_igual exp
    (47) expresion -> . exp igual_igual exp
    (48) expresion -> . exp diff_igual exp
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    expresion                      shift and go to state 39
    exp                            shift and go to state 40
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 29

    (29) condicion_if -> IF PARIZQ . expresion PARDER bloque PUNCOM
    (30) condicion_if -> IF PARIZQ . expresion PARDER bloque else_condicion PUNCOM
    (22) expresion -> . expresion AND expresion
    (23) expresion -> . expresion OR expresion
    (41) expresion -> . exp
    (42) expresion -> . exp MAYOR exp
    (43) expresion -> . exp MENOR exp
    (44) expresion -> . exp DIFF exp
    (45) expresion -> . exp mas_igual exp
    (46) expresion -> . exp menor_igual exp
    (47) expresion -> . exp igual_igual exp
    (48) expresion -> . exp diff_igual exp
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    expresion                      shift and go to state 52
    exp                            shift and go to state 40
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 30

    (32) condicion_while -> WHILE PARIZQ . expresion PARDER bloque PUNCOM
    (22) expresion -> . expresion AND expresion
    (23) expresion -> . expresion OR expresion
    (41) expresion -> . exp
    (42) expresion -> . exp MAYOR exp
    (43) expresion -> . exp MENOR exp
    (44) expresion -> . exp DIFF exp
    (45) expresion -> . exp mas_igual exp
    (46) expresion -> . exp menor_igual exp
    (47) expresion -> . exp igual_igual exp
    (48) expresion -> . exp diff_igual exp
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    expresion                      shift and go to state 53
    exp                            shift and go to state 40
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 31

    (24) escritura -> PRINT PARIZQ . print_expresion PARDER PUNCOM
    (25) print_expresion -> . expresion multiples_print
    (26) print_expresion -> . CTESTRING multiples_print
    (22) expresion -> . expresion AND expresion
    (23) expresion -> . expresion OR expresion
    (41) expresion -> . exp
    (42) expresion -> . exp MAYOR exp
    (43) expresion -> . exp MENOR exp
    (44) expresion -> . exp DIFF exp
    (45) expresion -> . exp mas_igual exp
    (46) expresion -> . exp menor_igual exp
    (47) expresion -> . exp igual_igual exp
    (48) expresion -> . exp diff_igual exp
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    CTESTRING       shift and go to state 56
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    print_expresion                shift and go to state 54
    expresion                      shift and go to state 55
    exp                            shift and go to state 40
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 32

    (2) vars -> VAR id DOSPUN TIPO . PUNCOM asignacion_id

    PUNCOM          shift and go to state 57


state 33

    (8) TIPO -> INT .

    PUNCOM          reduce using rule 8 (TIPO -> INT .)


state 34

    (9) TIPO -> FLOAT .

    PUNCOM          reduce using rule 9 (TIPO -> FLOAT .)


state 35

    (10) TIPO -> BOOL .

    PUNCOM          reduce using rule 10 (TIPO -> BOOL .)


state 36

    (11) TIPO -> CHAR .

    PUNCOM          reduce using rule 11 (TIPO -> CHAR .)


state 37

    (4) acum_id -> COMA ID . acum_id
    (4) acum_id -> . COMA ID acum_id
    (5) acum_id -> . empty
    (72) empty -> .

    COMA            shift and go to state 24
    DOSPUN          reduce using rule 72 (empty -> .)

    acum_id                        shift and go to state 58
    empty                          shift and go to state 25

state 38

    (67) var_cte -> ID .

    POR             reduce using rule 67 (var_cte -> ID .)
    DIV             reduce using rule 67 (var_cte -> ID .)
    MOD             reduce using rule 67 (var_cte -> ID .)
    MAS             reduce using rule 67 (var_cte -> ID .)
    MENOS           reduce using rule 67 (var_cte -> ID .)
    MAYOR           reduce using rule 67 (var_cte -> ID .)
    MENOR           reduce using rule 67 (var_cte -> ID .)
    DIFF            reduce using rule 67 (var_cte -> ID .)
    IGUAL           reduce using rule 67 (var_cte -> ID .)
    PUNCOM          reduce using rule 67 (var_cte -> ID .)
    AND             reduce using rule 67 (var_cte -> ID .)
    OR              reduce using rule 67 (var_cte -> ID .)
    PARDER          reduce using rule 67 (var_cte -> ID .)
    COMA            reduce using rule 67 (var_cte -> ID .)


state 39

    (21) asignacion -> ID IGUAL expresion . PUNCOM
    (22) expresion -> expresion . AND expresion
    (23) expresion -> expresion . OR expresion

    PUNCOM          shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 40

    (41) expresion -> exp .
    (42) expresion -> exp . MAYOR exp
    (43) expresion -> exp . MENOR exp
    (44) expresion -> exp . DIFF exp
    (45) expresion -> exp . mas_igual exp
    (46) expresion -> exp . menor_igual exp
    (47) expresion -> exp . igual_igual exp
    (48) expresion -> exp . diff_igual exp
    (49) mas_igual -> . MAYOR IGUAL
    (50) menor_igual -> . MENOR IGUAL
    (51) igual_igual -> . IGUAL IGUAL
    (52) diff_igual -> . DIFF IGUAL

    PUNCOM          reduce using rule 41 (expresion -> exp .)
    AND             reduce using rule 41 (expresion -> exp .)
    OR              reduce using rule 41 (expresion -> exp .)
    PARDER          reduce using rule 41 (expresion -> exp .)
    COMA            reduce using rule 41 (expresion -> exp .)
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    DIFF            shift and go to state 64
    IGUAL           shift and go to state 69

    mas_igual                      shift and go to state 65
    menor_igual                    shift and go to state 66
    igual_igual                    shift and go to state 67
    diff_igual                     shift and go to state 68

state 41

    (53) exp -> termino . exp_operacion
    (54) exp_operacion -> . MAS termino exp_operacion
    (55) exp_operacion -> . MENOS termino exp_operacion
    (56) exp_operacion -> . empty
    (72) empty -> .

    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

    exp_operacion                  shift and go to state 70
    empty                          shift and go to state 73

state 42

    (57) termino -> factor . termino_operador
    (58) termino_operador -> . POR factor termino_operador
    (59) termino_operador -> . DIV factor termino_operador
    (60) termino_operador -> . MOD factor termino_operador
    (61) termino_operador -> . empty
    (72) empty -> .

    POR             shift and go to state 75
    DIV             shift and go to state 76
    MOD             shift and go to state 77
    MAS             reduce using rule 72 (empty -> .)
    MENOS           reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

    termino_operador               shift and go to state 74
    empty                          shift and go to state 78

state 43

    (62) factor -> PARIZQ . expresion PARDER
    (22) expresion -> . expresion AND expresion
    (23) expresion -> . expresion OR expresion
    (41) expresion -> . exp
    (42) expresion -> . exp MAYOR exp
    (43) expresion -> . exp MENOR exp
    (44) expresion -> . exp DIFF exp
    (45) expresion -> . exp mas_igual exp
    (46) expresion -> . exp menor_igual exp
    (47) expresion -> . exp igual_igual exp
    (48) expresion -> . exp diff_igual exp
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    expresion                      shift and go to state 79
    exp                            shift and go to state 40
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 44

    (63) factor -> MAS . var_cte
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC

    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51

    var_cte                        shift and go to state 80

state 45

    (65) factor -> var_cte .

    POR             reduce using rule 65 (factor -> var_cte .)
    DIV             reduce using rule 65 (factor -> var_cte .)
    MOD             reduce using rule 65 (factor -> var_cte .)
    MAS             reduce using rule 65 (factor -> var_cte .)
    MENOS           reduce using rule 65 (factor -> var_cte .)
    MAYOR           reduce using rule 65 (factor -> var_cte .)
    MENOR           reduce using rule 65 (factor -> var_cte .)
    DIFF            reduce using rule 65 (factor -> var_cte .)
    IGUAL           reduce using rule 65 (factor -> var_cte .)
    PUNCOM          reduce using rule 65 (factor -> var_cte .)
    AND             reduce using rule 65 (factor -> var_cte .)
    OR              reduce using rule 65 (factor -> var_cte .)
    PARDER          reduce using rule 65 (factor -> var_cte .)
    COMA            reduce using rule 65 (factor -> var_cte .)


state 46

    (64) factor -> MENOS . var_cte
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC

    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51

    var_cte                        shift and go to state 81

state 47

    (66) factor -> empty .

    POR             reduce using rule 66 (factor -> empty .)
    DIV             reduce using rule 66 (factor -> empty .)
    MOD             reduce using rule 66 (factor -> empty .)
    MAS             reduce using rule 66 (factor -> empty .)
    MENOS           reduce using rule 66 (factor -> empty .)
    MAYOR           reduce using rule 66 (factor -> empty .)
    MENOR           reduce using rule 66 (factor -> empty .)
    DIFF            reduce using rule 66 (factor -> empty .)
    IGUAL           reduce using rule 66 (factor -> empty .)
    PUNCOM          reduce using rule 66 (factor -> empty .)
    AND             reduce using rule 66 (factor -> empty .)
    OR              reduce using rule 66 (factor -> empty .)
    PARDER          reduce using rule 66 (factor -> empty .)
    COMA            reduce using rule 66 (factor -> empty .)


state 48

    (68) var_cte -> CTEI .

    POR             reduce using rule 68 (var_cte -> CTEI .)
    DIV             reduce using rule 68 (var_cte -> CTEI .)
    MOD             reduce using rule 68 (var_cte -> CTEI .)
    MAS             reduce using rule 68 (var_cte -> CTEI .)
    MENOS           reduce using rule 68 (var_cte -> CTEI .)
    MAYOR           reduce using rule 68 (var_cte -> CTEI .)
    MENOR           reduce using rule 68 (var_cte -> CTEI .)
    DIFF            reduce using rule 68 (var_cte -> CTEI .)
    IGUAL           reduce using rule 68 (var_cte -> CTEI .)
    PUNCOM          reduce using rule 68 (var_cte -> CTEI .)
    AND             reduce using rule 68 (var_cte -> CTEI .)
    OR              reduce using rule 68 (var_cte -> CTEI .)
    PARDER          reduce using rule 68 (var_cte -> CTEI .)
    COMA            reduce using rule 68 (var_cte -> CTEI .)


state 49

    (69) var_cte -> CTEF .

    POR             reduce using rule 69 (var_cte -> CTEF .)
    DIV             reduce using rule 69 (var_cte -> CTEF .)
    MOD             reduce using rule 69 (var_cte -> CTEF .)
    MAS             reduce using rule 69 (var_cte -> CTEF .)
    MENOS           reduce using rule 69 (var_cte -> CTEF .)
    MAYOR           reduce using rule 69 (var_cte -> CTEF .)
    MENOR           reduce using rule 69 (var_cte -> CTEF .)
    DIFF            reduce using rule 69 (var_cte -> CTEF .)
    IGUAL           reduce using rule 69 (var_cte -> CTEF .)
    PUNCOM          reduce using rule 69 (var_cte -> CTEF .)
    AND             reduce using rule 69 (var_cte -> CTEF .)
    OR              reduce using rule 69 (var_cte -> CTEF .)
    PARDER          reduce using rule 69 (var_cte -> CTEF .)
    COMA            reduce using rule 69 (var_cte -> CTEF .)


state 50

    (70) var_cte -> CTEB .

    POR             reduce using rule 70 (var_cte -> CTEB .)
    DIV             reduce using rule 70 (var_cte -> CTEB .)
    MOD             reduce using rule 70 (var_cte -> CTEB .)
    MAS             reduce using rule 70 (var_cte -> CTEB .)
    MENOS           reduce using rule 70 (var_cte -> CTEB .)
    MAYOR           reduce using rule 70 (var_cte -> CTEB .)
    MENOR           reduce using rule 70 (var_cte -> CTEB .)
    DIFF            reduce using rule 70 (var_cte -> CTEB .)
    IGUAL           reduce using rule 70 (var_cte -> CTEB .)
    PUNCOM          reduce using rule 70 (var_cte -> CTEB .)
    AND             reduce using rule 70 (var_cte -> CTEB .)
    OR              reduce using rule 70 (var_cte -> CTEB .)
    PARDER          reduce using rule 70 (var_cte -> CTEB .)
    COMA            reduce using rule 70 (var_cte -> CTEB .)


state 51

    (71) var_cte -> CTEC .

    POR             reduce using rule 71 (var_cte -> CTEC .)
    DIV             reduce using rule 71 (var_cte -> CTEC .)
    MOD             reduce using rule 71 (var_cte -> CTEC .)
    MAS             reduce using rule 71 (var_cte -> CTEC .)
    MENOS           reduce using rule 71 (var_cte -> CTEC .)
    MAYOR           reduce using rule 71 (var_cte -> CTEC .)
    MENOR           reduce using rule 71 (var_cte -> CTEC .)
    DIFF            reduce using rule 71 (var_cte -> CTEC .)
    IGUAL           reduce using rule 71 (var_cte -> CTEC .)
    PUNCOM          reduce using rule 71 (var_cte -> CTEC .)
    AND             reduce using rule 71 (var_cte -> CTEC .)
    OR              reduce using rule 71 (var_cte -> CTEC .)
    PARDER          reduce using rule 71 (var_cte -> CTEC .)
    COMA            reduce using rule 71 (var_cte -> CTEC .)


state 52

    (29) condicion_if -> IF PARIZQ expresion . PARDER bloque PUNCOM
    (30) condicion_if -> IF PARIZQ expresion . PARDER bloque else_condicion PUNCOM
    (22) expresion -> expresion . AND expresion
    (23) expresion -> expresion . OR expresion

    PARDER          shift and go to state 82
    AND             shift and go to state 60
    OR              shift and go to state 61


state 53

    (32) condicion_while -> WHILE PARIZQ expresion . PARDER bloque PUNCOM
    (22) expresion -> expresion . AND expresion
    (23) expresion -> expresion . OR expresion

    PARDER          shift and go to state 83
    AND             shift and go to state 60
    OR              shift and go to state 61


state 54

    (24) escritura -> PRINT PARIZQ print_expresion . PARDER PUNCOM

    PARDER          shift and go to state 84


state 55

    (25) print_expresion -> expresion . multiples_print
    (22) expresion -> expresion . AND expresion
    (23) expresion -> expresion . OR expresion
    (27) multiples_print -> . COMA print_expresion
    (28) multiples_print -> . empty
    (72) empty -> .

    AND             shift and go to state 60
    OR              shift and go to state 61
    COMA            shift and go to state 86
    PARDER          reduce using rule 72 (empty -> .)

    multiples_print                shift and go to state 85
    empty                          shift and go to state 87

state 56

    (26) print_expresion -> CTESTRING . multiples_print
    (27) multiples_print -> . COMA print_expresion
    (28) multiples_print -> . empty
    (72) empty -> .

    COMA            shift and go to state 86
    PARDER          reduce using rule 72 (empty -> .)

    multiples_print                shift and go to state 88
    empty                          shift and go to state 87

state 57

    (2) vars -> VAR id DOSPUN TIPO PUNCOM . asignacion_id
    (6) asignacion_id -> . id DOSPUN TIPO PUNCOM asignacion_id
    (7) asignacion_id -> . empty
    (3) id -> . ID acum_id
    (72) empty -> .

    ID              shift and go to state 10
    LLAVIZQ         reduce using rule 72 (empty -> .)

    id                             shift and go to state 89
    asignacion_id                  shift and go to state 90
    empty                          shift and go to state 91

state 58

    (4) acum_id -> COMA ID acum_id .

    DOSPUN          reduce using rule 4 (acum_id -> COMA ID acum_id .)


state 59

    (21) asignacion -> ID IGUAL expresion PUNCOM .

    ID              reduce using rule 21 (asignacion -> ID IGUAL expresion PUNCOM .)
    IF              reduce using rule 21 (asignacion -> ID IGUAL expresion PUNCOM .)
    WHILE           reduce using rule 21 (asignacion -> ID IGUAL expresion PUNCOM .)
    PRINT           reduce using rule 21 (asignacion -> ID IGUAL expresion PUNCOM .)
    LLAVDER         reduce using rule 21 (asignacion -> ID IGUAL expresion PUNCOM .)


state 60

    (22) expresion -> expresion AND . expresion
    (22) expresion -> . expresion AND expresion
    (23) expresion -> . expresion OR expresion
    (41) expresion -> . exp
    (42) expresion -> . exp MAYOR exp
    (43) expresion -> . exp MENOR exp
    (44) expresion -> . exp DIFF exp
    (45) expresion -> . exp mas_igual exp
    (46) expresion -> . exp menor_igual exp
    (47) expresion -> . exp igual_igual exp
    (48) expresion -> . exp diff_igual exp
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    expresion                      shift and go to state 92
    exp                            shift and go to state 40
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 61

    (23) expresion -> expresion OR . expresion
    (22) expresion -> . expresion AND expresion
    (23) expresion -> . expresion OR expresion
    (41) expresion -> . exp
    (42) expresion -> . exp MAYOR exp
    (43) expresion -> . exp MENOR exp
    (44) expresion -> . exp DIFF exp
    (45) expresion -> . exp mas_igual exp
    (46) expresion -> . exp menor_igual exp
    (47) expresion -> . exp igual_igual exp
    (48) expresion -> . exp diff_igual exp
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    expresion                      shift and go to state 93
    exp                            shift and go to state 40
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 62

    (42) expresion -> exp MAYOR . exp
    (49) mas_igual -> MAYOR . IGUAL
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    IGUAL           shift and go to state 95
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    exp                            shift and go to state 94
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 63

    (43) expresion -> exp MENOR . exp
    (50) menor_igual -> MENOR . IGUAL
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    IGUAL           shift and go to state 97
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    exp                            shift and go to state 96
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 64

    (44) expresion -> exp DIFF . exp
    (52) diff_igual -> DIFF . IGUAL
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    IGUAL           shift and go to state 99
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    exp                            shift and go to state 98
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 65

    (45) expresion -> exp mas_igual . exp
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    exp                            shift and go to state 100
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 66

    (46) expresion -> exp menor_igual . exp
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    exp                            shift and go to state 101
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 67

    (47) expresion -> exp igual_igual . exp
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    exp                            shift and go to state 102
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 68

    (48) expresion -> exp diff_igual . exp
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    exp                            shift and go to state 103
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 69

    (51) igual_igual -> IGUAL . IGUAL

    IGUAL           shift and go to state 104


state 70

    (53) exp -> termino exp_operacion .

    MAYOR           reduce using rule 53 (exp -> termino exp_operacion .)
    MENOR           reduce using rule 53 (exp -> termino exp_operacion .)
    DIFF            reduce using rule 53 (exp -> termino exp_operacion .)
    IGUAL           reduce using rule 53 (exp -> termino exp_operacion .)
    PUNCOM          reduce using rule 53 (exp -> termino exp_operacion .)
    AND             reduce using rule 53 (exp -> termino exp_operacion .)
    OR              reduce using rule 53 (exp -> termino exp_operacion .)
    PARDER          reduce using rule 53 (exp -> termino exp_operacion .)
    COMA            reduce using rule 53 (exp -> termino exp_operacion .)


state 71

    (54) exp_operacion -> MAS . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    termino                        shift and go to state 105
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 72

    (55) exp_operacion -> MENOS . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    termino                        shift and go to state 106
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 73

    (56) exp_operacion -> empty .

    MAYOR           reduce using rule 56 (exp_operacion -> empty .)
    MENOR           reduce using rule 56 (exp_operacion -> empty .)
    DIFF            reduce using rule 56 (exp_operacion -> empty .)
    IGUAL           reduce using rule 56 (exp_operacion -> empty .)
    PUNCOM          reduce using rule 56 (exp_operacion -> empty .)
    AND             reduce using rule 56 (exp_operacion -> empty .)
    OR              reduce using rule 56 (exp_operacion -> empty .)
    PARDER          reduce using rule 56 (exp_operacion -> empty .)
    COMA            reduce using rule 56 (exp_operacion -> empty .)


state 74

    (57) termino -> factor termino_operador .

    MAS             reduce using rule 57 (termino -> factor termino_operador .)
    MENOS           reduce using rule 57 (termino -> factor termino_operador .)
    MAYOR           reduce using rule 57 (termino -> factor termino_operador .)
    MENOR           reduce using rule 57 (termino -> factor termino_operador .)
    DIFF            reduce using rule 57 (termino -> factor termino_operador .)
    IGUAL           reduce using rule 57 (termino -> factor termino_operador .)
    PUNCOM          reduce using rule 57 (termino -> factor termino_operador .)
    AND             reduce using rule 57 (termino -> factor termino_operador .)
    OR              reduce using rule 57 (termino -> factor termino_operador .)
    PARDER          reduce using rule 57 (termino -> factor termino_operador .)
    COMA            reduce using rule 57 (termino -> factor termino_operador .)


state 75

    (58) termino_operador -> POR . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    factor                         shift and go to state 107
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 76

    (59) termino_operador -> DIV . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    factor                         shift and go to state 108
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 77

    (60) termino_operador -> MOD . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    factor                         shift and go to state 109
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 78

    (61) termino_operador -> empty .

    MAS             reduce using rule 61 (termino_operador -> empty .)
    MENOS           reduce using rule 61 (termino_operador -> empty .)
    MAYOR           reduce using rule 61 (termino_operador -> empty .)
    MENOR           reduce using rule 61 (termino_operador -> empty .)
    DIFF            reduce using rule 61 (termino_operador -> empty .)
    IGUAL           reduce using rule 61 (termino_operador -> empty .)
    PUNCOM          reduce using rule 61 (termino_operador -> empty .)
    AND             reduce using rule 61 (termino_operador -> empty .)
    OR              reduce using rule 61 (termino_operador -> empty .)
    PARDER          reduce using rule 61 (termino_operador -> empty .)
    COMA            reduce using rule 61 (termino_operador -> empty .)


state 79

    (62) factor -> PARIZQ expresion . PARDER
    (22) expresion -> expresion . AND expresion
    (23) expresion -> expresion . OR expresion

    PARDER          shift and go to state 110
    AND             shift and go to state 60
    OR              shift and go to state 61


state 80

    (63) factor -> MAS var_cte .

    POR             reduce using rule 63 (factor -> MAS var_cte .)
    DIV             reduce using rule 63 (factor -> MAS var_cte .)
    MOD             reduce using rule 63 (factor -> MAS var_cte .)
    MAS             reduce using rule 63 (factor -> MAS var_cte .)
    MENOS           reduce using rule 63 (factor -> MAS var_cte .)
    MAYOR           reduce using rule 63 (factor -> MAS var_cte .)
    MENOR           reduce using rule 63 (factor -> MAS var_cte .)
    DIFF            reduce using rule 63 (factor -> MAS var_cte .)
    IGUAL           reduce using rule 63 (factor -> MAS var_cte .)
    PUNCOM          reduce using rule 63 (factor -> MAS var_cte .)
    AND             reduce using rule 63 (factor -> MAS var_cte .)
    OR              reduce using rule 63 (factor -> MAS var_cte .)
    PARDER          reduce using rule 63 (factor -> MAS var_cte .)
    COMA            reduce using rule 63 (factor -> MAS var_cte .)


state 81

    (64) factor -> MENOS var_cte .

    POR             reduce using rule 64 (factor -> MENOS var_cte .)
    DIV             reduce using rule 64 (factor -> MENOS var_cte .)
    MOD             reduce using rule 64 (factor -> MENOS var_cte .)
    MAS             reduce using rule 64 (factor -> MENOS var_cte .)
    MENOS           reduce using rule 64 (factor -> MENOS var_cte .)
    MAYOR           reduce using rule 64 (factor -> MENOS var_cte .)
    MENOR           reduce using rule 64 (factor -> MENOS var_cte .)
    DIFF            reduce using rule 64 (factor -> MENOS var_cte .)
    IGUAL           reduce using rule 64 (factor -> MENOS var_cte .)
    PUNCOM          reduce using rule 64 (factor -> MENOS var_cte .)
    AND             reduce using rule 64 (factor -> MENOS var_cte .)
    OR              reduce using rule 64 (factor -> MENOS var_cte .)
    PARDER          reduce using rule 64 (factor -> MENOS var_cte .)
    COMA            reduce using rule 64 (factor -> MENOS var_cte .)


state 82

    (29) condicion_if -> IF PARIZQ expresion PARDER . bloque PUNCOM
    (30) condicion_if -> IF PARIZQ expresion PARDER . bloque else_condicion PUNCOM
    (12) bloque -> . LLAVIZQ multiples_estatutos LLAVDER

    LLAVIZQ         shift and go to state 8

    bloque                         shift and go to state 111

state 83

    (32) condicion_while -> WHILE PARIZQ expresion PARDER . bloque PUNCOM
    (12) bloque -> . LLAVIZQ multiples_estatutos LLAVDER

    LLAVIZQ         shift and go to state 8

    bloque                         shift and go to state 112

state 84

    (24) escritura -> PRINT PARIZQ print_expresion PARDER . PUNCOM

    PUNCOM          shift and go to state 113


state 85

    (25) print_expresion -> expresion multiples_print .

    PARDER          reduce using rule 25 (print_expresion -> expresion multiples_print .)


state 86

    (27) multiples_print -> COMA . print_expresion
    (25) print_expresion -> . expresion multiples_print
    (26) print_expresion -> . CTESTRING multiples_print
    (22) expresion -> . expresion AND expresion
    (23) expresion -> . expresion OR expresion
    (41) expresion -> . exp
    (42) expresion -> . exp MAYOR exp
    (43) expresion -> . exp MENOR exp
    (44) expresion -> . exp DIFF exp
    (45) expresion -> . exp mas_igual exp
    (46) expresion -> . exp menor_igual exp
    (47) expresion -> . exp igual_igual exp
    (48) expresion -> . exp diff_igual exp
    (53) exp -> . termino exp_operacion
    (57) termino -> . factor termino_operador
    (62) factor -> . PARIZQ expresion PARDER
    (63) factor -> . MAS var_cte
    (64) factor -> . MENOS var_cte
    (65) factor -> . var_cte
    (66) factor -> . empty
    (67) var_cte -> . ID
    (68) var_cte -> . CTEI
    (69) var_cte -> . CTEF
    (70) var_cte -> . CTEB
    (71) var_cte -> . CTEC
    (72) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    CTESTRING       shift and go to state 56
    PARIZQ          shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 46
    ID              shift and go to state 38
    CTEI            shift and go to state 48
    CTEF            shift and go to state 49
    CTEB            shift and go to state 50
    CTEC            shift and go to state 51
    POR             reduce using rule 72 (empty -> .)
    DIV             reduce using rule 72 (empty -> .)
    MOD             reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)

  ! MAS             [ reduce using rule 72 (empty -> .) ]
  ! MENOS           [ reduce using rule 72 (empty -> .) ]

    print_expresion                shift and go to state 114
    expresion                      shift and go to state 55
    exp                            shift and go to state 40
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    var_cte                        shift and go to state 45
    empty                          shift and go to state 47

state 87

    (28) multiples_print -> empty .

    PARDER          reduce using rule 28 (multiples_print -> empty .)


state 88

    (26) print_expresion -> CTESTRING multiples_print .

    PARDER          reduce using rule 26 (print_expresion -> CTESTRING multiples_print .)


state 89

    (6) asignacion_id -> id . DOSPUN TIPO PUNCOM asignacion_id

    DOSPUN          shift and go to state 115


state 90

    (2) vars -> VAR id DOSPUN TIPO PUNCOM asignacion_id .

    LLAVIZQ         reduce using rule 2 (vars -> VAR id DOSPUN TIPO PUNCOM asignacion_id .)


state 91

    (7) asignacion_id -> empty .

    LLAVIZQ         reduce using rule 7 (asignacion_id -> empty .)


state 92

    (22) expresion -> expresion AND expresion .
    (22) expresion -> expresion . AND expresion
    (23) expresion -> expresion . OR expresion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNCOM          reduce using rule 22 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 22 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 22 (expresion -> expresion AND expresion .)
    AND             shift and go to state 60
    OR              shift and go to state 61

  ! AND             [ reduce using rule 22 (expresion -> expresion AND expresion .) ]
  ! OR              [ reduce using rule 22 (expresion -> expresion AND expresion .) ]


state 93

    (23) expresion -> expresion OR expresion .
    (22) expresion -> expresion . AND expresion
    (23) expresion -> expresion . OR expresion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNCOM          reduce using rule 23 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 23 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 23 (expresion -> expresion OR expresion .)
    AND             shift and go to state 60
    OR              shift and go to state 61

  ! AND             [ reduce using rule 23 (expresion -> expresion OR expresion .) ]
  ! OR              [ reduce using rule 23 (expresion -> expresion OR expresion .) ]


state 94

    (42) expresion -> exp MAYOR exp .

    PUNCOM          reduce using rule 42 (expresion -> exp MAYOR exp .)
    AND             reduce using rule 42 (expresion -> exp MAYOR exp .)
    OR              reduce using rule 42 (expresion -> exp MAYOR exp .)
    PARDER          reduce using rule 42 (expresion -> exp MAYOR exp .)
    COMA            reduce using rule 42 (expresion -> exp MAYOR exp .)


state 95

    (49) mas_igual -> MAYOR IGUAL .

    PARIZQ          reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    MAS             reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    MENOS           reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    ID              reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    CTEI            reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    CTEF            reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    CTEB            reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    CTEC            reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    POR             reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    DIV             reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    MOD             reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    PUNCOM          reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    AND             reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    OR              reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    PARDER          reduce using rule 49 (mas_igual -> MAYOR IGUAL .)
    COMA            reduce using rule 49 (mas_igual -> MAYOR IGUAL .)


state 96

    (43) expresion -> exp MENOR exp .

    PUNCOM          reduce using rule 43 (expresion -> exp MENOR exp .)
    AND             reduce using rule 43 (expresion -> exp MENOR exp .)
    OR              reduce using rule 43 (expresion -> exp MENOR exp .)
    PARDER          reduce using rule 43 (expresion -> exp MENOR exp .)
    COMA            reduce using rule 43 (expresion -> exp MENOR exp .)


state 97

    (50) menor_igual -> MENOR IGUAL .

    PARIZQ          reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    MAS             reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    MENOS           reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    ID              reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    CTEI            reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    CTEF            reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    CTEB            reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    CTEC            reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    POR             reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    DIV             reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    MOD             reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    PUNCOM          reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    AND             reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    OR              reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    PARDER          reduce using rule 50 (menor_igual -> MENOR IGUAL .)
    COMA            reduce using rule 50 (menor_igual -> MENOR IGUAL .)


state 98

    (44) expresion -> exp DIFF exp .

    PUNCOM          reduce using rule 44 (expresion -> exp DIFF exp .)
    AND             reduce using rule 44 (expresion -> exp DIFF exp .)
    OR              reduce using rule 44 (expresion -> exp DIFF exp .)
    PARDER          reduce using rule 44 (expresion -> exp DIFF exp .)
    COMA            reduce using rule 44 (expresion -> exp DIFF exp .)


state 99

    (52) diff_igual -> DIFF IGUAL .

    PARIZQ          reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    MAS             reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    MENOS           reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    ID              reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    CTEI            reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    CTEF            reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    CTEB            reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    CTEC            reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    POR             reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    DIV             reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    MOD             reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    PUNCOM          reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    AND             reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    OR              reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    PARDER          reduce using rule 52 (diff_igual -> DIFF IGUAL .)
    COMA            reduce using rule 52 (diff_igual -> DIFF IGUAL .)


state 100

    (45) expresion -> exp mas_igual exp .

    PUNCOM          reduce using rule 45 (expresion -> exp mas_igual exp .)
    AND             reduce using rule 45 (expresion -> exp mas_igual exp .)
    OR              reduce using rule 45 (expresion -> exp mas_igual exp .)
    PARDER          reduce using rule 45 (expresion -> exp mas_igual exp .)
    COMA            reduce using rule 45 (expresion -> exp mas_igual exp .)


state 101

    (46) expresion -> exp menor_igual exp .

    PUNCOM          reduce using rule 46 (expresion -> exp menor_igual exp .)
    AND             reduce using rule 46 (expresion -> exp menor_igual exp .)
    OR              reduce using rule 46 (expresion -> exp menor_igual exp .)
    PARDER          reduce using rule 46 (expresion -> exp menor_igual exp .)
    COMA            reduce using rule 46 (expresion -> exp menor_igual exp .)


state 102

    (47) expresion -> exp igual_igual exp .

    PUNCOM          reduce using rule 47 (expresion -> exp igual_igual exp .)
    AND             reduce using rule 47 (expresion -> exp igual_igual exp .)
    OR              reduce using rule 47 (expresion -> exp igual_igual exp .)
    PARDER          reduce using rule 47 (expresion -> exp igual_igual exp .)
    COMA            reduce using rule 47 (expresion -> exp igual_igual exp .)


state 103

    (48) expresion -> exp diff_igual exp .

    PUNCOM          reduce using rule 48 (expresion -> exp diff_igual exp .)
    AND             reduce using rule 48 (expresion -> exp diff_igual exp .)
    OR              reduce using rule 48 (expresion -> exp diff_igual exp .)
    PARDER          reduce using rule 48 (expresion -> exp diff_igual exp .)
    COMA            reduce using rule 48 (expresion -> exp diff_igual exp .)


state 104

    (51) igual_igual -> IGUAL IGUAL .

    PARIZQ          reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    MAS             reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    MENOS           reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    ID              reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    CTEI            reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    CTEF            reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    CTEB            reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    CTEC            reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    POR             reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    DIV             reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    MOD             reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    PUNCOM          reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    AND             reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    OR              reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    PARDER          reduce using rule 51 (igual_igual -> IGUAL IGUAL .)
    COMA            reduce using rule 51 (igual_igual -> IGUAL IGUAL .)


state 105

    (54) exp_operacion -> MAS termino . exp_operacion
    (54) exp_operacion -> . MAS termino exp_operacion
    (55) exp_operacion -> . MENOS termino exp_operacion
    (56) exp_operacion -> . empty
    (72) empty -> .

    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

    exp_operacion                  shift and go to state 116
    empty                          shift and go to state 73

state 106

    (55) exp_operacion -> MENOS termino . exp_operacion
    (54) exp_operacion -> . MAS termino exp_operacion
    (55) exp_operacion -> . MENOS termino exp_operacion
    (56) exp_operacion -> . empty
    (72) empty -> .

    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

    exp_operacion                  shift and go to state 117
    empty                          shift and go to state 73

state 107

    (58) termino_operador -> POR factor . termino_operador
    (58) termino_operador -> . POR factor termino_operador
    (59) termino_operador -> . DIV factor termino_operador
    (60) termino_operador -> . MOD factor termino_operador
    (61) termino_operador -> . empty
    (72) empty -> .

    POR             shift and go to state 75
    DIV             shift and go to state 76
    MOD             shift and go to state 77
    MAS             reduce using rule 72 (empty -> .)
    MENOS           reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

    termino_operador               shift and go to state 118
    empty                          shift and go to state 78

state 108

    (59) termino_operador -> DIV factor . termino_operador
    (58) termino_operador -> . POR factor termino_operador
    (59) termino_operador -> . DIV factor termino_operador
    (60) termino_operador -> . MOD factor termino_operador
    (61) termino_operador -> . empty
    (72) empty -> .

    POR             shift and go to state 75
    DIV             shift and go to state 76
    MOD             shift and go to state 77
    MAS             reduce using rule 72 (empty -> .)
    MENOS           reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

    termino_operador               shift and go to state 119
    empty                          shift and go to state 78

state 109

    (60) termino_operador -> MOD factor . termino_operador
    (58) termino_operador -> . POR factor termino_operador
    (59) termino_operador -> . DIV factor termino_operador
    (60) termino_operador -> . MOD factor termino_operador
    (61) termino_operador -> . empty
    (72) empty -> .

    POR             shift and go to state 75
    DIV             shift and go to state 76
    MOD             shift and go to state 77
    MAS             reduce using rule 72 (empty -> .)
    MENOS           reduce using rule 72 (empty -> .)
    MAYOR           reduce using rule 72 (empty -> .)
    MENOR           reduce using rule 72 (empty -> .)
    DIFF            reduce using rule 72 (empty -> .)
    IGUAL           reduce using rule 72 (empty -> .)
    PUNCOM          reduce using rule 72 (empty -> .)
    AND             reduce using rule 72 (empty -> .)
    OR              reduce using rule 72 (empty -> .)
    PARDER          reduce using rule 72 (empty -> .)
    COMA            reduce using rule 72 (empty -> .)

    termino_operador               shift and go to state 120
    empty                          shift and go to state 78

state 110

    (62) factor -> PARIZQ expresion PARDER .

    POR             reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    DIV             reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    MOD             reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    DIFF            reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    PUNCOM          reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    AND             reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    OR              reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 62 (factor -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 62 (factor -> PARIZQ expresion PARDER .)


state 111

    (29) condicion_if -> IF PARIZQ expresion PARDER bloque . PUNCOM
    (30) condicion_if -> IF PARIZQ expresion PARDER bloque . else_condicion PUNCOM
    (31) else_condicion -> . ELSE bloque

    PUNCOM          shift and go to state 121
    ELSE            shift and go to state 123

    else_condicion                 shift and go to state 122

state 112

    (32) condicion_while -> WHILE PARIZQ expresion PARDER bloque . PUNCOM

    PUNCOM          shift and go to state 124


state 113

    (24) escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM .

    ID              reduce using rule 24 (escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM .)
    IF              reduce using rule 24 (escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM .)
    WHILE           reduce using rule 24 (escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM .)
    PRINT           reduce using rule 24 (escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM .)
    LLAVDER         reduce using rule 24 (escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM .)


state 114

    (27) multiples_print -> COMA print_expresion .

    PARDER          reduce using rule 27 (multiples_print -> COMA print_expresion .)


state 115

    (6) asignacion_id -> id DOSPUN . TIPO PUNCOM asignacion_id
    (8) TIPO -> . INT
    (9) TIPO -> . FLOAT
    (10) TIPO -> . BOOL
    (11) TIPO -> . CHAR

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    BOOL            shift and go to state 35
    CHAR            shift and go to state 36

    TIPO                           shift and go to state 125

state 116

    (54) exp_operacion -> MAS termino exp_operacion .

    MAYOR           reduce using rule 54 (exp_operacion -> MAS termino exp_operacion .)
    MENOR           reduce using rule 54 (exp_operacion -> MAS termino exp_operacion .)
    DIFF            reduce using rule 54 (exp_operacion -> MAS termino exp_operacion .)
    IGUAL           reduce using rule 54 (exp_operacion -> MAS termino exp_operacion .)
    PUNCOM          reduce using rule 54 (exp_operacion -> MAS termino exp_operacion .)
    AND             reduce using rule 54 (exp_operacion -> MAS termino exp_operacion .)
    OR              reduce using rule 54 (exp_operacion -> MAS termino exp_operacion .)
    PARDER          reduce using rule 54 (exp_operacion -> MAS termino exp_operacion .)
    COMA            reduce using rule 54 (exp_operacion -> MAS termino exp_operacion .)


state 117

    (55) exp_operacion -> MENOS termino exp_operacion .

    MAYOR           reduce using rule 55 (exp_operacion -> MENOS termino exp_operacion .)
    MENOR           reduce using rule 55 (exp_operacion -> MENOS termino exp_operacion .)
    DIFF            reduce using rule 55 (exp_operacion -> MENOS termino exp_operacion .)
    IGUAL           reduce using rule 55 (exp_operacion -> MENOS termino exp_operacion .)
    PUNCOM          reduce using rule 55 (exp_operacion -> MENOS termino exp_operacion .)
    AND             reduce using rule 55 (exp_operacion -> MENOS termino exp_operacion .)
    OR              reduce using rule 55 (exp_operacion -> MENOS termino exp_operacion .)
    PARDER          reduce using rule 55 (exp_operacion -> MENOS termino exp_operacion .)
    COMA            reduce using rule 55 (exp_operacion -> MENOS termino exp_operacion .)


state 118

    (58) termino_operador -> POR factor termino_operador .

    MAS             reduce using rule 58 (termino_operador -> POR factor termino_operador .)
    MENOS           reduce using rule 58 (termino_operador -> POR factor termino_operador .)
    MAYOR           reduce using rule 58 (termino_operador -> POR factor termino_operador .)
    MENOR           reduce using rule 58 (termino_operador -> POR factor termino_operador .)
    DIFF            reduce using rule 58 (termino_operador -> POR factor termino_operador .)
    IGUAL           reduce using rule 58 (termino_operador -> POR factor termino_operador .)
    PUNCOM          reduce using rule 58 (termino_operador -> POR factor termino_operador .)
    AND             reduce using rule 58 (termino_operador -> POR factor termino_operador .)
    OR              reduce using rule 58 (termino_operador -> POR factor termino_operador .)
    PARDER          reduce using rule 58 (termino_operador -> POR factor termino_operador .)
    COMA            reduce using rule 58 (termino_operador -> POR factor termino_operador .)


state 119

    (59) termino_operador -> DIV factor termino_operador .

    MAS             reduce using rule 59 (termino_operador -> DIV factor termino_operador .)
    MENOS           reduce using rule 59 (termino_operador -> DIV factor termino_operador .)
    MAYOR           reduce using rule 59 (termino_operador -> DIV factor termino_operador .)
    MENOR           reduce using rule 59 (termino_operador -> DIV factor termino_operador .)
    DIFF            reduce using rule 59 (termino_operador -> DIV factor termino_operador .)
    IGUAL           reduce using rule 59 (termino_operador -> DIV factor termino_operador .)
    PUNCOM          reduce using rule 59 (termino_operador -> DIV factor termino_operador .)
    AND             reduce using rule 59 (termino_operador -> DIV factor termino_operador .)
    OR              reduce using rule 59 (termino_operador -> DIV factor termino_operador .)
    PARDER          reduce using rule 59 (termino_operador -> DIV factor termino_operador .)
    COMA            reduce using rule 59 (termino_operador -> DIV factor termino_operador .)


state 120

    (60) termino_operador -> MOD factor termino_operador .

    MAS             reduce using rule 60 (termino_operador -> MOD factor termino_operador .)
    MENOS           reduce using rule 60 (termino_operador -> MOD factor termino_operador .)
    MAYOR           reduce using rule 60 (termino_operador -> MOD factor termino_operador .)
    MENOR           reduce using rule 60 (termino_operador -> MOD factor termino_operador .)
    DIFF            reduce using rule 60 (termino_operador -> MOD factor termino_operador .)
    IGUAL           reduce using rule 60 (termino_operador -> MOD factor termino_operador .)
    PUNCOM          reduce using rule 60 (termino_operador -> MOD factor termino_operador .)
    AND             reduce using rule 60 (termino_operador -> MOD factor termino_operador .)
    OR              reduce using rule 60 (termino_operador -> MOD factor termino_operador .)
    PARDER          reduce using rule 60 (termino_operador -> MOD factor termino_operador .)
    COMA            reduce using rule 60 (termino_operador -> MOD factor termino_operador .)


state 121

    (29) condicion_if -> IF PARIZQ expresion PARDER bloque PUNCOM .

    ID              reduce using rule 29 (condicion_if -> IF PARIZQ expresion PARDER bloque PUNCOM .)
    IF              reduce using rule 29 (condicion_if -> IF PARIZQ expresion PARDER bloque PUNCOM .)
    WHILE           reduce using rule 29 (condicion_if -> IF PARIZQ expresion PARDER bloque PUNCOM .)
    PRINT           reduce using rule 29 (condicion_if -> IF PARIZQ expresion PARDER bloque PUNCOM .)
    LLAVDER         reduce using rule 29 (condicion_if -> IF PARIZQ expresion PARDER bloque PUNCOM .)


state 122

    (30) condicion_if -> IF PARIZQ expresion PARDER bloque else_condicion . PUNCOM

    PUNCOM          shift and go to state 126


state 123

    (31) else_condicion -> ELSE . bloque
    (12) bloque -> . LLAVIZQ multiples_estatutos LLAVDER

    LLAVIZQ         shift and go to state 8

    bloque                         shift and go to state 127

state 124

    (32) condicion_while -> WHILE PARIZQ expresion PARDER bloque PUNCOM .

    ID              reduce using rule 32 (condicion_while -> WHILE PARIZQ expresion PARDER bloque PUNCOM .)
    IF              reduce using rule 32 (condicion_while -> WHILE PARIZQ expresion PARDER bloque PUNCOM .)
    WHILE           reduce using rule 32 (condicion_while -> WHILE PARIZQ expresion PARDER bloque PUNCOM .)
    PRINT           reduce using rule 32 (condicion_while -> WHILE PARIZQ expresion PARDER bloque PUNCOM .)
    LLAVDER         reduce using rule 32 (condicion_while -> WHILE PARIZQ expresion PARDER bloque PUNCOM .)


state 125

    (6) asignacion_id -> id DOSPUN TIPO . PUNCOM asignacion_id

    PUNCOM          shift and go to state 128


state 126

    (30) condicion_if -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM .

    ID              reduce using rule 30 (condicion_if -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM .)
    IF              reduce using rule 30 (condicion_if -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM .)
    WHILE           reduce using rule 30 (condicion_if -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM .)
    PRINT           reduce using rule 30 (condicion_if -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM .)
    LLAVDER         reduce using rule 30 (condicion_if -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM .)


state 127

    (31) else_condicion -> ELSE bloque .

    PUNCOM          reduce using rule 31 (else_condicion -> ELSE bloque .)


state 128

    (6) asignacion_id -> id DOSPUN TIPO PUNCOM . asignacion_id
    (6) asignacion_id -> . id DOSPUN TIPO PUNCOM asignacion_id
    (7) asignacion_id -> . empty
    (3) id -> . ID acum_id
    (72) empty -> .

    ID              shift and go to state 10
    LLAVIZQ         reduce using rule 72 (empty -> .)

    id                             shift and go to state 89
    asignacion_id                  shift and go to state 129
    empty                          shift and go to state 91

state 129

    (6) asignacion_id -> id DOSPUN TIPO PUNCOM asignacion_id .

    LLAVIZQ         reduce using rule 6 (asignacion_id -> id DOSPUN TIPO PUNCOM asignacion_id .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 28 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 28 resolved as shift
WARNING: shift/reduce conflict for MAS in state 29 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 29 resolved as shift
WARNING: shift/reduce conflict for MAS in state 30 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 30 resolved as shift
WARNING: shift/reduce conflict for MAS in state 31 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 31 resolved as shift
WARNING: shift/reduce conflict for MAS in state 43 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 43 resolved as shift
WARNING: shift/reduce conflict for MAS in state 60 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 60 resolved as shift
WARNING: shift/reduce conflict for MAS in state 61 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 61 resolved as shift
WARNING: shift/reduce conflict for MAS in state 62 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 62 resolved as shift
WARNING: shift/reduce conflict for MAS in state 63 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 63 resolved as shift
WARNING: shift/reduce conflict for MAS in state 64 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 64 resolved as shift
WARNING: shift/reduce conflict for MAS in state 65 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 65 resolved as shift
WARNING: shift/reduce conflict for MAS in state 66 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 66 resolved as shift
WARNING: shift/reduce conflict for MAS in state 67 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 67 resolved as shift
WARNING: shift/reduce conflict for MAS in state 68 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 68 resolved as shift
WARNING: shift/reduce conflict for MAS in state 71 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 71 resolved as shift
WARNING: shift/reduce conflict for MAS in state 72 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 72 resolved as shift
WARNING: shift/reduce conflict for MAS in state 75 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 75 resolved as shift
WARNING: shift/reduce conflict for MAS in state 76 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 76 resolved as shift
WARNING: shift/reduce conflict for MAS in state 77 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 77 resolved as shift
WARNING: shift/reduce conflict for MAS in state 86 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 86 resolved as shift
WARNING: shift/reduce conflict for AND in state 92 resolved as shift
WARNING: shift/reduce conflict for OR in state 92 resolved as shift
WARNING: shift/reduce conflict for AND in state 93 resolved as shift
WARNING: shift/reduce conflict for OR in state 93 resolved as shift
